# Generated by Django 4.2.10 on 2024-04-19 11:17

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Listing_abstract",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "nameofservice",
                    models.CharField(
                        help_text="Please state directly the service you will provide EG. I will help/create/do...",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        default="listingpics/notavailable.png", upload_to="listingpics"
                    ),
                ),
                ("details", models.TextField(null=True)),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="skilltag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("skilltagname", models.CharField(max_length=30)),
                ("created", models.DateTimeField(auto_now_add=True, null=True)),
                (
                    "image",
                    models.ImageField(
                        default="listingpics/notavailable.png", upload_to="listingpics"
                    ),
                ),
            ],
            options={
                "verbose_name": "Skill Tag",
            },
        ),
        migrations.CreateModel(
            name="ServiceListing",
            fields=[
                (
                    "listing_abstract_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="coreapp.listing_abstract",
                    ),
                ),
                ("hourlyCharge", models.DecimalField(decimal_places=2, max_digits=10)),
                ("skill", models.CharField(max_length=128, null=True)),
            ],
            options={
                "verbose_name": "Service Listing",
            },
            bases=("coreapp.listing_abstract",),
        ),
        migrations.CreateModel(
            name="SkillSwapListing",
            fields=[
                (
                    "listing_abstract_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="coreapp.listing_abstract",
                    ),
                ),
                ("skill_offered", models.CharField(max_length=128, null=True)),
                ("optional_skill_wanted", models.CharField(max_length=128, null=True)),
            ],
            options={
                "verbose_name": "Skill Swap Listing",
            },
            bases=("coreapp.listing_abstract",),
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField()),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="listing_abstract",
            name="relatedskilltag",
            field=models.ManyToManyField(blank=True, to="coreapp.skilltag"),
        ),
        migrations.AddField(
            model_name="listing_abstract",
            name="student_user",
            field=models.ForeignKey(
                default=None,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="listings_created",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="SkillSwapOffer",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("skill_offered", models.CharField(max_length=128, null=True)),
                ("message", models.TextField(null=True)),
                ("date", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Offered", "Offered"),
                            ("Rejected", "Rejected"),
                            ("Accepted", "Accepted"),
                        ],
                        default="Offered",
                        max_length=20,
                    ),
                ),
                (
                    "client_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="offer_made",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "skillswap_listing",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="offers",
                        to="coreapp.skillswaplisting",
                    ),
                ),
            ],
            options={
                "verbose_name": "Skill Swap Offer",
            },
        ),
        migrations.CreateModel(
            name="ServiceListingPurchase",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("message", models.TextField(null=True)),
                ("date", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Completed", "Completed"),
                            ("In Progress", "In Progress"),
                        ],
                        default="In Progress",
                        max_length=20,
                    ),
                ),
                (
                    "client_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="purchases_made",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "service_listing",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="purchases",
                        to="coreapp.servicelisting",
                    ),
                ),
            ],
            options={
                "verbose_name": "Service Listing Purchase",
            },
        ),
        migrations.CreateModel(
            name="Reviews",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "service_type",
                    models.CharField(
                        choices=[
                            ("Service", "Service Listing"),
                            ("SkillSwap", "Skill Swap Listing"),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                ("text", models.TextField()),
                ("date", models.DateTimeField(auto_now_add=True)),
                (
                    "rating",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="review_made",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "service_listing",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="coreapp.servicelisting",
                    ),
                ),
                (
                    "skillswap_listing",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="coreapp.skillswaplisting",
                    ),
                ),
            ],
            options={
                "verbose_name": "Review",
            },
        ),
    ]
